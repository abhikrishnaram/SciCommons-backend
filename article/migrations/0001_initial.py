# Generated by Django 5.0.3 on 2024-03-11 19:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("app", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("article_name", models.CharField(max_length=300, unique=True)),
                (
                    "article_file",
                    models.FileField(blank=True, null=True, upload_to="articles_file/"),
                ),
                ("Public_date", models.DateTimeField(auto_now_add=True, null=True)),
                ("keywords", models.TextField()),
                ("authorstring", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[("public", "Public"), ("private", "Private")],
                        default="public",
                        max_length=10,
                    ),
                ),
                ("video", models.CharField(blank=True, max_length=255, null=True)),
                ("link", models.CharField(blank=True, max_length=255, null=True)),
                ("license", models.CharField(max_length=255, null=True)),
                (
                    "published_article_file",
                    models.FileField(
                        blank=True, null=True, upload_to="published_article_file/"
                    ),
                ),
                ("published", models.CharField(max_length=255, null=True)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("Code", models.CharField(blank=True, max_length=100, null=True)),
                ("Abstract", models.TextField(blank=True, max_length=5000, null=True)),
                ("views", models.IntegerField(default=0)),
                ("doi", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "community",
                    models.ManyToManyField(
                        through="app.CommunityMeta", to="app.community"
                    ),
                ),
                (
                    "parent_article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="article.article",
                    ),
                ),
            ],
            options={
                "db_table": "article",
            },
        ),
        migrations.CreateModel(
            name="ArticleBlockedUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Article",
                        to="article.article",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "article_blocked_user",
            },
        ),
        migrations.AddField(
            model_name="article",
            name="blocked_users",
            field=models.ManyToManyField(
                through="article.ArticleBlockedUser", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="ArticleModerator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="article.article",
                    ),
                ),
                (
                    "moderator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.moderator"
                    ),
                ),
            ],
            options={
                "db_table": "article_moderator",
            },
        ),
        migrations.AddField(
            model_name="article",
            name="moderator",
            field=models.ManyToManyField(
                related_name="article_moderators",
                through="article.ArticleModerator",
                to="app.moderator",
            ),
        ),
        migrations.CreateModel(
            name="ArticleReviewer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="article.article",
                    ),
                ),
                (
                    "officialreviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.officialreviewer",
                    ),
                ),
            ],
            options={
                "db_table": "article_reviewer",
            },
        ),
        migrations.AddField(
            model_name="article",
            name="reviewer",
            field=models.ManyToManyField(
                related_name="article_reviewers",
                through="article.ArticleReviewer",
                to="app.officialreviewer",
            ),
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="article.article",
                    ),
                ),
            ],
            options={
                "db_table": "author",
                "unique_together": {("article", "User")},
            },
        ),
        migrations.AddField(
            model_name="article",
            name="authors",
            field=models.ManyToManyField(
                related_name="article_authors",
                through="article.Author",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CommentBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Comment", models.TextField(max_length=20000)),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "confidence",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("Title", models.CharField(max_length=200)),
                ("Comment_date", models.DateTimeField(auto_now_add=True)),
                ("tag", models.CharField(default="public", max_length=255)),
                (
                    "comment_type",
                    models.CharField(default="publiccomment", max_length=255),
                ),
                (
                    "Type",
                    models.CharField(
                        choices=[
                            ("review", "Review"),
                            ("decision", "Decision"),
                            ("comment", "Comment"),
                        ],
                        default="comment",
                        max_length=10,
                    ),
                ),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="article.article",
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="article.commentbase",
                    ),
                ),
                (
                    "version",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="article.commentbase",
                    ),
                ),
            ],
            options={
                "db_table": "comment_base",
            },
        ),
        migrations.CreateModel(
            name="LikeBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="article.commentbase",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "like_base",
            },
        ),
        migrations.CreateModel(
            name="HandlersBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("handle_name", models.CharField(max_length=255, unique=True)),
                (
                    "User",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="article.article",
                    ),
                ),
            ],
            options={
                "db_table": "handler_base",
                "unique_together": {("User", "handle_name", "article")},
            },
        ),
    ]
