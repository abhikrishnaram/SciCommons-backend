# Generated by Django 5.0.3 on 2024-03-27 05:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("article", "0003_initial"),
        ("community", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="community",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="communitymember",
            name="community",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="community.community"
            ),
        ),
        migrations.AddField(
            model_name="communitymember",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="community",
            name="members",
            field=models.ManyToManyField(
                related_name="members",
                through="community.CommunityMember",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="communitymeta",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="article_meta",
                to="article.article",
            ),
        ),
        migrations.AddField(
            model_name="communitymeta",
            name="community",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="community.community"
            ),
        ),
        migrations.AddField(
            model_name="communityrequests",
            name="community",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requests",
                to="community.community",
            ),
        ),
        migrations.AddField(
            model_name="communityrequests",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="community",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="community.community"
            ),
        ),
        migrations.AddField(
            model_name="moderator",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="officialreviewer",
            name="User",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="officialreviewer",
            name="community",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="community.community",
            ),
        ),
        migrations.AddField(
            model_name="unregistereduser",
            name="article",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="article.article"
            ),
        ),
        migrations.AddConstraint(
            model_name="communitymember",
            constraint=models.UniqueConstraint(
                fields=("community", "user"), name="unique_admin_per_community"
            ),
        ),
        migrations.AddConstraint(
            model_name="communitymember",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_admin", True)),
                fields=("user", "is_admin"),
                name="only_one_community_admin",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="communitymeta",
            unique_together={("article", "community")},
        ),
        migrations.AlterUniqueTogether(
            name="moderator",
            unique_together={("user", "community")},
        ),
        migrations.AlterUniqueTogether(
            name="officialreviewer",
            unique_together={("User", "community")},
        ),
    ]
